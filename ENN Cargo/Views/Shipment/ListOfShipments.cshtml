@model ENN_Cargo.Models.ShipmentViewModel
@{
    ViewData["Title"] = "Shipments List";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ENN Cargo</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    <!-- Main content -->
    <main>
        <div class="container">
            <div class="page-header">
                <div class="title-section">
                    <h1 class="page-title">
                        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <rect x="1" y="3" width="15" height="13"></rect>
                            <polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon>
                            <circle cx="5.5" cy="18.5" r="2.5"></circle>
                            <circle cx="18.5" cy="18.5" r="2.5"></circle>
                        </svg>
                        Shipments
                    </h1>
                </div>

                @if (User.IsInRole("Admin") || User.IsInRole("ShipmentCompany"))
                {
                    <div class="actions">
                        <a asp-controller="Shipment" asp-action="AddShipment" class="btn btn-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <line x1="12" y1="5" x2="12" y2="19"></line>
                                <line x1="5" y1="12" x2="19" y2="12"></line>
                            </svg>
                            Add New Shipment
                        </a>
                    </div>
                }
            </div>

            <div class="card filter-card">
                <div class="card-header">
                    <h2 class="card-title">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>
                        </svg>
                        Filter Shipments
                    </h2>
                    <button class="filter-toggle" id="filterToggle">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="6 9 12 15 18 9"></polyline>
                        </svg>
                    </button>
                </div>
                <div class="card-body filter-body" id="filterBody">
                    <form asp-controller="Shipment" asp-action="ListOfShipments" method="get" class="filter-form">
                        <div class="form-row">
                            <div class="form-group">
                                <label asp-for="SelectedFromCountry">From Country</label>
                                <select asp-for="SelectedFromCountry" asp-items="Model.FromCountries" class="form-control" id="SelectedFromCountry">
                                    <option value="">Select A Country</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label asp-for="SelectedFromTown">From Town</label>
                                <select asp-for="SelectedFromTown" asp-items="Model.FromTowns" class="form-control" id="SelectedFromTown">
                                    <option value="">Select A Town</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label asp-for="SelectedToCountry">To Country</label>
                                <select asp-for="SelectedToCountry" asp-items="Model.ToCountries" class="form-control" id="SelectedToCountry">
                                    <option value="">Select A Country</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label asp-for="SelectedToTown">To Town</label>
                                <select asp-for="SelectedToTown" asp-items="Model.ToTowns" class="form-control" id="SelectedToTown">
                                    <option value="">Select A Town</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label asp-for="MinWeight">Min Weight (tons)</label>
                                <input type="number" asp-for="MinWeight" class="form-control" step="0.001" placeholder="0.000" />
                            </div>
                            <div class="form-group">
                                <label asp-for="MaxWeight">Max Weight (tons)</label>
                                <input type="number" asp-for="MaxWeight" class="form-control" step="0.001" placeholder="1000.000" />
                            </div>
                            <div class="form-group">
                                <label asp-for="PickUpDate">Pick-up Date (From)</label>
                                <input type="date" asp-for="PickUpDate" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="DeliveryDate">Delivery Date (From)</label>
                                <input type="date" asp-for="DeliveryDate" class="form-control" />
                            </div>
                        </div>
                        <div class="filter-actions">
                            <button type="submit" class="btn btn-primary">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>
                                </svg>
                                Apply Filters
                            </button>
                            <a asp-controller="Shipment" asp-action="ListOfShipments" class="btn btn-outline">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <line x1="8" y1="12" x2="16" y2="12"></line>
                                </svg>
                                Clear Filters
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card table-card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Description</th>
                                    <th>Weight</th>
                                    <th class="from-column">From</th>
                                    <th class="to-column">To</th>
                                    <th>Pick Up</th>
                                    <th>Delivery</th>
                                    <th>Status</th>
                                    @if (User.IsInRole("Admin") || User.IsInRole("TruckCompany") && Model.Status == "Available")
                                    {
                                        <th class="actions-column">Actions</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Shipments == null || !Model.Shipments.Any())
                                {
                                    <tr class="empty-row">
                                        <td colspan="@(User.IsInRole("Admin") || User.IsInRole("TruckCompany") ? 8 : 7)">
                                            <div class="empty-state">
                                                <div class="empty-icon">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                        <circle cx="12" cy="12" r="10"></circle>
                                                        <line x1="12" y1="8" x2="12" y2="12"></line>
                                                        <line x1="12" y1="16" x2="12.01" y2="16"></line>
                                                    </svg>
                                                </div>
                                                <p>No shipments found matching your criteria.</p>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var shipment in Model.Shipments)
                                    {
                                        <tr>
                                            <td>@shipment.Description</td>
                                            <td class="weight-cell">@((shipment.Weight / 1000).ToString("F3")) tons</td>
                                            <td class="from-column">
                                                <div class="location-info">
                                                    <div class="location-main">@shipment.FromTown, @shipment.FromCountry</div>
                                                    <div class="location-address">@shipment.FromAddress</div>
                                                </div>
                                            </td>
                                            <td class="to-column">
                                                <div class="location-info">
                                                    <div class="location-main">@shipment.ToTown, @shipment.ToCountry</div>
                                                    <div class="location-address">@shipment.ToAddress</div>
                                                </div>
                                            </td>
                                            <td class="date-cell">@(shipment.PickUpDate.HasValue ? shipment.PickUpDate.Value.ToString("yyyy-MM-dd") : "-")</td>
                                            <td class="date-cell">@(shipment.DeliveryDate.HasValue ? shipment.DeliveryDate.Value.ToString("yyyy-MM-dd") : "-")</td>
                                            <td>
                                                <span class="status-badge status-@shipment.Status.ToLower()">@shipment.Status</span>
                                            </td>
                                            @if (User.IsInRole("Admin"))
                                            {
                                                <td class="actions-cell">
                                                    <div class="action-buttons">
                                                        <a asp-controller="Shipment" asp-action="UpdateShipment" asp-route-id="@shipment.Id"
                                                           class="btn btn-icon btn-edit" title="Edit Shipment">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                                                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                                                            </svg>
                                                        </a>
                                                        <form method="post" asp-controller="Shipment" asp-action="Delete" asp-route-id="@shipment.Id"
                                                              class="d-inline" onsubmit="deleteItem(event, this, 'shipment'); return false;">
                                                            @Html.AntiForgeryToken()
                                                            <button type="submit" class="btn btn-icon btn-delete" title="Delete Shipment">
                                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                                    <polyline points="3 6 5 6 21 6"></polyline>
                                                                    <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                                                                    <line x1="10" y1="11" x2="10" y2="17"></line>
                                                                    <line x1="14" y1="11" x2="14" y2="17"></line>
                                                                </svg>
                                                            </button>
                                                        </form>
                                                    </div>
                                                </td>
                                            }
                                            else if ((User.IsInRole("TruckCompany") || User.IsInRole("Admin")) && shipment.Status == "Available")
                                            {
                                                <td class="actions-cell">
                                                    <a asp-controller="Shipment" asp-action="AssignShipment" asp-route-id="@shipment.Id"
                                                       class="btn btn-assign">Assign</a>
                                                </td>
                                            }
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="footer-grid">
                <div class="footer-col">
                    <h4>About ENN Cargo</h4>
                    <p>ENN Cargo is a leading European transport organization with 30 years of experience in providing reliable and cost-effective transport solutions across Europe. Our network of carrier partners helps us deliver excellence in every transport.</p>
                    <div class="social-icons">
                        <a href="#" class="social-icon"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="social-icon"><i class="fab fa-youtube"></i></a>
                        <a href="#" class="social-icon"><i class="fab fa-linkedin-in"></i></a>
                    </div>
                </div>
                <div class="footer-col">
                    <h4>Our Services</h4>
                    <ul>
                        <li><a href="#">Full Truck Loads</a></li>
                        <li><a href="#">Intermodal Transport</a></li>
                        <li><a href="#">Express Delivery</a></li>
                        <li><a href="#">Specialized Transport</a></li>
                        <li><a href="#">Digital Solutions</a></li>
                    </ul>
                </div>
                <div class="footer-col">
                    <h4>Quick Links</h4>
                    <ul>
                        <li><a href="#">Home</a></li>
                        <li><a href="#">About Us</a></li>
                        <li><a href="#">International Markets</a></li>
                        <li><a href="#">News</a></li>
                        <li><a href="#">Contact</a></li>
                    </ul>
                </div>
                <div class="footer-col">
                    <h4>Legal Information</h4>
                    <ul>
                        <li><a href="#">Terms and Conditions</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Cookie Policy</a></li>
                        <li><a href="#">Imprint</a></li>
                        <li><a href="#">Data Protection</a></li>
                    </ul>
                </div>
            </div>
            <div class="copyright">
                <p>© 2025 ENN Cargo. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Language dropdown toggle
            const languageSwitch = document.getElementById('languageSwitch');
            const languageFlyout = document.getElementById('languageFlyout');
            const closeFlyout = document.getElementById('closeFlyout');

            if (languageSwitch) {
                languageSwitch.addEventListener('click', function(e) {
                    e.stopPropagation();
                    languageFlyout.classList.toggle('show');
                });

                if (closeFlyout) {
                    closeFlyout.addEventListener('click', function(e) {
                        e.stopPropagation();
                        languageFlyout.classList.remove('show');
                    });
                }

                // Close the flyout if clicked outside
                document.addEventListener('click', function(event) {
                    const isClickInside = languageSwitch.contains(event.target) ||
                                          languageFlyout.contains(event.target);

                    if (!isClickInside && languageFlyout.classList.contains('show')) {
                        languageFlyout.classList.remove('show');
                    }
                });
            }

            // User menu dropdown toggle
            const userNameToggle = document.getElementById('user-name-toggle');
            const userDropdown = document.getElementById('user-dropdown');

            if (userNameToggle) {
                userNameToggle.addEventListener('click', function(e) {
                    e.stopPropagation();
                    userDropdown.classList.toggle('show');
                });

                // Close the dropdown if clicked outside
                document.addEventListener('click', function(event) {
                    const isClickInside = userNameToggle.contains(event.target) ||
                                          userDropdown.contains(event.target);

                    if (!isClickInside && userDropdown.classList.contains('show')) {
                        userDropdown.classList.remove('show');
                    }
                });
            }

            // Filter toggle functionality
            const filterToggle = document.getElementById('filterToggle');
            const filterBody = document.getElementById('filterBody');

            // Set initial state - show filters if any are active
            const hasActiveFilters = @((!string.IsNullOrEmpty(Model.SelectedFromCountry) ||
               !string.IsNullOrEmpty(Model.SelectedFromTown) ||
               !string.IsNullOrEmpty(Model.SelectedToCountry) ||
               !string.IsNullOrEmpty(Model.SelectedToTown) ||
               Model.MinWeight != null ||
               Model.MaxWeight != null ||
               Model.PickUpDate != null ||
               Model.DeliveryDate != null) ? "true" : "false");

            if (hasActiveFilters) {
                filterBody.style.display = 'block';
                filterToggle.classList.add('active');
            } else {
                filterBody.style.display = 'none';
            }

            // Toggle filter panel when clicking the button
            filterToggle.addEventListener('click', function() {
                if (filterBody.style.display === 'none') {
                    filterBody.style.display = 'block';
                    filterToggle.classList.add('active');
                } else {
                    filterBody.style.display = 'none';
                    filterToggle.classList.remove('active');
                }
            });

            // Predefined towns
            var predefinedTowns = @Html.Raw(Json.Serialize(Model.PredefinedTowns));

            updateTownsDropdown("From", document.getElementById("SelectedFromCountry").value);
            updateTownsDropdown("To", document.getElementById("SelectedToCountry").value);

            document.getElementById("SelectedFromCountry").addEventListener("change", function () {
                updateTownsDropdown("From", this.value);
            });

            document.getElementById("SelectedToCountry").addEventListener("change", function () {
                updateTownsDropdown("To", this.value);
            });

            function updateTownsDropdown(type, selectedCountry) {
                var townsDropdown = document.getElementById("Selected" + type + "Town");
                townsDropdown.innerHTML = '<option value="">Select A Town</option>';
                if (predefinedTowns[selectedCountry]) {
                    predefinedTowns[selectedCountry].forEach(function (town) {
                        var option = document.createElement("option");
                        option.value = town;
                        option.text = town;
                        if ((town === "@Model.SelectedFromTown" && type === "From") || (town === "@Model.SelectedToTown" && type === "To")) {
                            option.selected = true;
                        }
                        townsDropdown.appendChild(option);
                    });
                }
            }
        });

        function deleteItem(event, form, itemType) {
            event.preventDefault();
            if (confirm(`Are you sure you want to delete this ${itemType}?`)) {
                $.ajax({
                    url: form.action,
                    type: 'POST',
                    data: $(form).serialize(),
                    success: function(response) {
                        if (response.success) {
                            $(form).closest('tr').remove();
                        } else {
                            alert(response.message || `Error deleting ${itemType}.`);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert(`Error deleting ${itemType}: ${xhr.responseText || 'Unknown error'}`);
                    }
                });
            }
        }
    </script>
</body>
</html>