@model ENN_Cargo.Models.ShipmentViewModel
@{
    Layout = null;
    ViewData["Title"] = "Shipments List";
}

<div class="shipment-container">
    <div class="page-header">
        <div class="title-section">
            <h1 class="page-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <rect x="1" y="3" width="15" height="13"></rect>
                    <polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon>
                    <circle cx="5.5" cy="18.5" r="2.5"></circle>
                    <circle cx="18.5" cy="18.5" r="2.5"></circle>
                </svg>
                Shipments
            </h1>
        </div>

        @if (User.IsInRole("Admin") || User.IsInRole("ShipmentCompany"))
        {
            <div class="actions">
                <a asp-controller="Shipment" asp-action="AddShipment" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <line x1="12" y1="5" x2="12" y2="19"></line>
                        <line x1="5" y1="12" x2="19" y2="12"></line>
                    </svg>
                    Add New Shipment
                </a>
            </div>
        }
    </div>

    <div class="card filter-card">
        <div class="card-header">
            <h2 class="card-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>
                </svg>
                Filter Shipments
            </h2>
            <button class="filter-toggle" id="filterToggle">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polyline points="6 9 12 15 18 9"></polyline>
                </svg>
            </button>
        </div>
        <div class="card-body filter-body" id="filterBody">
            <form asp-controller="Shipment" asp-action="ListOfShipments" method="get" class="filter-form">
                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="SelectedFromCountry">From Country</label>
                        <select asp-for="SelectedFromCountry" asp-items="Model.FromCountries" class="form-control" id="SelectedFromCountry">
                            <option value="">Select A Country</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="SelectedFromTown">From Town</label>
                        <select asp-for="SelectedFromTown" asp-items="Model.FromTowns" class="form-control" id="SelectedFromTown">
                            <option value="">Select A Town</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="SelectedToCountry">To Country</label>
                        <select asp-for="SelectedToCountry" asp-items="Model.ToCountries" class="form-control" id="SelectedToCountry">
                            <option value="">Select A Country</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="SelectedToTown">To Town</label>
                        <select asp-for="SelectedToTown" asp-items="Model.ToTowns" class="form-control" id="SelectedToTown">
                            <option value="">Select A Town</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="MinWeight">Min Weight (kg)</label>
                        <input type="number" asp-for="MinWeight" class="form-control" step="0.01" placeholder="0.00" />
                    </div>
                    <div class="form-group">
                        <label asp-for="MaxWeight">Max Weight (kg)</label>
                        <input type="number" asp-for="MaxWeight" class="form-control" step="0.01" placeholder="1000.00" />
                    </div>
                    <div class="form-group">
                        <label asp-for="PickUpDate">Pick-up Date (From)</label>
                        <input type="date" asp-for="PickUpDate" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label asp-for="DeliveryDate">Delivery Date (From)</label>
                        <input type="date" asp-for="DeliveryDate" class="form-control" />
                    </div>
                </div>
                <div class="filter-actions">
                    <button type="submit" class="btn btn-primary">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>
                        </svg>
                        Apply Filters
                    </button>
                    <a asp-controller="Shipment" asp-action="ListOfShipments" class="btn btn-outline">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="8" y1="12" x2="16" y2="12"></line>
                        </svg>
                        Clear Filters
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card table-card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>Description</th>
                            <th>Weight</th>
                            <th class="from-column">From</th>
                            <th class="to-column">To</th>
                            <th>Pick Up</th>
                            <th>Delivery</th>
                            <th>Status</th>
                            @if (User.IsInRole("Admin") || User.IsInRole("TruckCompany") && Model.Status == "Available")
                            {
                                <th class="actions-column">Actions</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Shipments == null || !Model.Shipments.Any())
                        {
                            <tr class="empty-row">
                                <td colspan="@(User.IsInRole("Admin") || User.IsInRole("TruckCompany") ? 8 : 7)">
                                    <div class="empty-state">
                                        <div class="empty-icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <circle cx="12" cy="12" r="10"></circle>
                                                <line x1="12" y1="8" x2="12" y2="12"></line>
                                                <line x1="12" y1="16" x2="12.01" y2="16"></line>
                                            </svg>
                                        </div>
                                        <p>No shipments found matching your criteria.</p>
                                    </div>
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var shipment in Model.Shipments)
                            {
                                <tr>
                                    <td>@shipment.Description</td>
                                    <td class="weight-cell">@shipment.Weight kg</td>
                                    <td class="from-column">
                                        <div class="location-info">
                                            <div class="location-main">@shipment.FromTown, @shipment.FromCountry</div>
                                            <div class="location-address">@shipment.FromAddress</div>
                                        </div>
                                    </td>
                                    <td class="to-column">
                                        <div class="location-info">
                                            <div class="location-main">@shipment.ToTown, @shipment.ToCountry</div>
                                            <div class="location-address">@shipment.ToAddress</div>
                                        </div>
                                    </td>
                                    <td class="date-cell">@(shipment.PickUpDate.HasValue ? shipment.PickUpDate.Value.ToString("yyyy-MM-dd") : "-")</td>
                                    <td class="date-cell">@(shipment.DeliveryDate.HasValue ? shipment.DeliveryDate.Value.ToString("yyyy-MM-dd") : "-")</td>
                                    <td>
                                        <span class="status-badge status-@shipment.Status.ToLower()">@shipment.Status</span>
                                    </td>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <td class="actions-cell">
                                            <div class="action-buttons">
                                                <a asp-controller="Shipment" asp-action="UpdateShipment" asp-route-id="@shipment.Id"
                                                   class="btn btn-icon btn-edit" title="Edit Shipment">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                        <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                                        <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                                                    </svg>
                                                </a>
                                                <form method="post" asp-controller="Shipment" asp-action="Delete" asp-route-id="@shipment.Id"
                                                      class="d-inline" onsubmit="deleteItem(event, this, 'shipment'); return false;">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-icon btn-delete" title="Delete Shipment">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                            <polyline points="3 6 5 6 21 6"></polyline>
                                                            <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                                                            <line x1="10" y1="11" x2="10" y2="17"></line>
                                                            <line x1="14" y1="11" x2="14" y2="17"></line>
                                                        </svg>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    }
                                    else if ((User.IsInRole("TruckCompany") || User.IsInRole("Admin")) && shipment.Status == "Available")
                                    {
                                        <td class="actions-cell">
                                            <a asp-controller="Shipment" asp-action="AssignShipment" asp-route-id="@shipment.Id"
                                               class="btn btn-assign">Assign</a>
                                        </td>
                                    }
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #003781;
        --secondary-color: #e30613;
        --accent-color: #009fe3;
        --success-color: #28a745;
        --danger-color: #dc3545;
        --warning-color: #ffc107;
        --info-color: #17a2b8;
        --light-gray: #f5f5f5;
        --medium-gray: #e0e0e0;
        --dark-gray: #333;
        --white: #ffffff;
        --border-color: #dee2e6;
        --hover-light: #f8f9fa;
    }

    body {
        font-family: 'Helvetica Neue', Arial, sans-serif;
        background-color: var(--light-gray);
        color: var(--dark-gray);
        line-height: 1.6;
    }

    .shipment-container {
        max-width: 1300px;
        margin: 0 auto;
        padding: 20px;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }

    .page-title {
        color: var(--primary-color);
        font-size: 1.8rem;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
    }

        .page-title svg {
            margin-right: 10px;
            color: var(--primary-color);
        }

    .actions {
        display: flex;
        gap: 10px;
    }

    .card {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 30px;
        overflow: hidden;
    }

    .filter-card {
        margin-bottom: 25px;
    }

    .card-header {
        padding: 15px 20px;
        border-bottom: 1px solid var(--border-color);
        background-color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-title {
        margin: 0;
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--primary-color);
        display: flex;
        align-items: center;
    }

        .card-title svg {
            margin-right: 10px;
            color: var(--accent-color);
        }

    .filter-toggle {
        background: none;
        border: none;
        cursor: pointer;
        color: var(--accent-color);
        display: flex;
        align-items: center;
        justify-content: center;
        width: 30px;
        height: 30px;
        border-radius: 4px;
        transition: all 0.2s;
    }

        .filter-toggle:hover {
            background-color: var(--hover-light);
        }

        .filter-toggle svg {
            transition: transform 0.3s;
        }

        .filter-toggle.active svg {
            transform: rotate(180deg);
        }

    .card-body {
        padding: 20px;
    }

    .filter-body {
        padding: 20px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        margin-right: -10px;
        margin-left: -10px;
    }

    .form-group {
        flex: 1;
        min-width: 200px;
        padding: 0 10px;
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            font-size: 0.9rem;
            color: var(--dark-gray);
        }

    .form-control {
        display: block;
        width: 100%;
        padding: 8px 12px;
        font-size: 0.95rem;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 4px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control:focus {
            color: #495057;
            background-color: #fff;
            border-color: var(--accent-color);
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(0, 159, 227, 0.25);
        }

    .filter-actions {
        display: flex;
        justify-content: flex-start;
        gap: 15px;
        margin-top: 10px;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        border: none;
        text-decoration: none;
        font-size: 0.9rem;
        white-space: nowrap;
    }

        .btn svg {
            margin-right: 5px;
        }

    .btn-primary {
        background-color: var(--primary-color);
        color: white;
        padding: 8px 15px;
        border-radius: 4px;
    }

        .btn-primary:hover {
            background-color: var(--accent-color);
        }

    .btn-outline {
        background-color: transparent;
        color: var(--primary-color);
        border: 1px solid var(--primary-color);
        padding: 8px 15px;
        border-radius: 4px;
    }

        .btn-outline:hover {
            background-color: var(--primary-color);
            color: white;
        }

    .btn-assign {
        background-color: var(--primary-color);
        color: white;
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 0.85rem;
    }

        .btn-assign:hover {
            background-color: var(--accent-color);
        }

    .btn-icon {
        background-color: transparent;
        width: 32px;
        height: 32px;
        padding: 0;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .btn-icon svg {
            margin: 0;
        }

    .btn-edit {
        color: var(--accent-color);
        border: 1px solid rgba(0, 159, 227, 0.2);
    }

        .btn-edit:hover {
            background-color: rgba(0, 159, 227, 0.1);
        }

    .btn-delete {
        color: var(--danger-color);
        border: 1px solid rgba(220, 53, 69, 0.2);
    }

        .btn-delete:hover {
            background-color: rgba(220, 53, 69, 0.1);
        }

    .table-card {
        overflow: hidden;
        padding: 0;
    }

    .table-responsive {
        overflow-x: auto;
        min-height: 300px;
    }

    .data-table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
    }

        .data-table thead th {
            text-align: left;
            padding: 12px 15px;
            font-weight: 600;
            color: var(--primary-color);
            background-color: #f8f9fa;
            border-bottom: 2px solid var(--border-color);
            white-space: nowrap;
            font-size: 0.9rem;
        }

        .data-table tbody td {
            padding: 12px 15px;
            border-bottom: 1px solid var(--border-color);
            font-size: 0.95rem;
            vertical-align: middle;
        }

        .data-table tbody tr:hover {
            background-color: rgba(0, 55, 129, 0.03);
        }

    .weight-cell {
        font-weight: 500;
        white-space: nowrap;
    }

    .date-cell {
        white-space: nowrap;
        font-family: monospace;
        font-size: 0.9rem;
    }

    .location-info {
        display: flex;
        flex-direction: column;
    }

    .location-main {
        font-weight: 500;
    }

    .location-address {
        font-size: 0.8rem;
        color: #6c757d;
        margin-top: 2px;
    }

    .from-column,
    .to-column {
        min-width: 180px;
    }

    .actions-column {
        width: 100px;
    }

    .status-badge {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 600;
        text-align: center;
        white-space: nowrap;
    }

    .status-available {
        background-color: rgba(40, 167, 69, 0.15);
        color: #155724;
    }

    .status-pending {
        background-color: rgba(255, 193, 7, 0.15);
        color: #856404;
    }

    .status-inprogress,
    .status-in-progress {
        background-color: rgba(0, 123, 255, 0.15);
        color: #004085;
    }

    .status-delivered {
        background-color: rgba(32, 201, 151, 0.15);
        color: #0f5132;
    }

    .status-cancelled {
        background-color: rgba(108, 117, 125, 0.15);
        color: #383d41;
    }

    .status-shipped {
        background-color: rgba(13, 110, 253, 0.15);
        color: #084298;
    }

    .actions-cell {
        white-space: nowrap;
    }

    .action-buttons {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .empty-state {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 40px 20px;
        color: #6c757d;
    }

    .empty-icon {
        margin-bottom: 15px;
        color: #adb5bd;
    }

    .empty-state p {
        font-size: 1rem;
        text-align: center;
        margin: 0;
    }

    .empty-row td {
        padding: 0 !important;
        border-bottom: none !important;
    }

    @@media (max-width: 992px) {
        .form-group

    {
        min-width: 250px;
    }

    }

    @@media (max-width: 768px) {
        .page-header

    {
        flex-direction: column;
        align-items: flex-start;
    }

    .actions {
        margin-top: 15px;
    }

    .data-table thead th:nth-child(3),
    .data-table tbody td:nth-child(3),
    .data-table thead th:nth-child(4),
    .data-table tbody td:nth-child(4) {
        display: none;
    }

    }

    @@media (max-width: 576px) {
        .page-title

    {
        font-size: 1.5rem;
    }

    .filter-actions {
        flex-direction: column;
    }

        .filter-actions .btn {
            width: 100%;
        }

    .data-table thead th,
    .data-table tbody td {
        padding: 10px 8px;
    }

        .data-table thead th:nth-child(5),
        .data-table tbody td:nth-child(5),
        .data-table thead th:nth-child(6),
        .data-table tbody td:nth-child(6) {
            display: none;
        }

    }
</style>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Filter toggle functionality
            const filterToggle = document.getElementById('filterToggle');
            const filterBody = document.getElementById('filterBody');

            // Set initial state - show filters if any are active
            const hasActiveFilters = @((!string.IsNullOrEmpty(Model.SelectedFromCountry) ||
               !string.IsNullOrEmpty(Model.SelectedFromTown) ||
               !string.IsNullOrEmpty(Model.SelectedToCountry) ||
               !string.IsNullOrEmpty(Model.SelectedToTown) ||
               Model.MinWeight != null ||
               Model.MaxWeight != null ||
               Model.PickUpDate != null ||
               Model.DeliveryDate != null) ? "true" : "false");

            if (hasActiveFilters) {
                filterBody.style.display = 'block';
                filterToggle.classList.add('active');
            } else {
                filterBody.style.display = 'none';
            }

            // Toggle filter panel when clicking the button
            filterToggle.addEventListener('click', function() {
                if (filterBody.style.display === 'none') {
                    filterBody.style.display = 'block';
                    filterToggle.classList.add('active');
                } else {
                    filterBody.style.display = 'none';
                    filterToggle.classList.remove('active');
                }
            });

            // Predefined towns
            var predefinedTowns = @Html.Raw(Json.Serialize(Model.PredefinedTowns));

            updateTownsDropdown("From", document.getElementById("SelectedFromCountry").value);
            updateTownsDropdown("To", document.getElementById("SelectedToCountry").value);

            document.getElementById("SelectedFromCountry").addEventListener("change", function () {
                updateTownsDropdown("From", this.value);
            });

            document.getElementById("SelectedToCountry").addEventListener("change", function () {
                updateTownsDropdown("To", this.value);
            });

            function updateTownsDropdown(type, selectedCountry) {
                var townsDropdown = document.getElementById("Selected" + type + "Town");
                townsDropdown.innerHTML = '<option value="">Select A Town</option>';
                if (predefinedTowns[selectedCountry]) {
                    predefinedTowns[selectedCountry].forEach(function (town) {
                        var option = document.createElement("option");
                        option.value = town;
                        option.text = town;
                        if ((town === "@Model.SelectedFromTown" && type === "From") || (town === "@Model.SelectedToTown" && type === "To")) {
                            option.selected = true;
                        }
                        townsDropdown.appendChild(option);
                    });
                }
            }
        });

        function deleteItem(event, form, itemType) {
            event.preventDefault();
            if (confirm(`Are you sure you want to delete this ${itemType}?`)) {
                $.ajax({
                    url: form.action,
                    type: 'POST',
                    data: $(form).serialize(),
                    success: function(response) {
                        if (response.success) {
                            $(form).closest('tr').remove();
                        } else {
                            alert(response.message || `Error deleting ${itemType}.`);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert(`Error deleting ${itemType}: ${xhr.responseText || 'Unknown error'}`);
                    }
                });
            }
        }
    </script>
}